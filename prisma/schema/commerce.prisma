model Cart {
  id        String     @id
  cartItems CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  guest     Boolean    @default(false)
  user      User[]
}

model CartItem {
  id         String   @id @default(cuid())
  cart       Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartId     String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId  String
  quantity   Int
  price      Price    @relation(fields: [priceId], references: [id])
  totalPrice Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  priceId    String
}

model Order {
  id                String           @id @default(cuid())
  guest             Boolean
  guestId           String?
  guestEmail        String?
  cartId            String?
  user              User?            @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  userId            String?
  orderItems        OrderItem[]
  status            OrderStatus      @default(Pending)
  isProcessed       Boolean          @default(false)
  shippingRateId    String?
  shippingRate      ShippingRate?    @relation(fields: [shippingRateId], references: [id])
  shippingAddressId String?
  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  paymentIntentId   String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  lastModified      DateTime?
}

enum OrderStatus {
  Pending
  Paid
}

model OrderItem {
  id        String   @id @default(cuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  price     Price    @relation(fields: [priceId], references: [id])
  priceId   String
  quantity  Int
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orderId   String
  createdAt DateTime @default(now())
}

model ShippingRate {
  id          String   @id @default(cuid())
  displayName String
  amount      Int
  metadata    Json?
  createdAt   DateTime @default(now())
  Order       Order[]
}

model Product {
  id          String          @id @default(cuid())
  name        String
  description String
  prices      Price[]
  thumbnail   String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  cartItems   CartItem[]
  OrderItem   OrderItem[]
  reviews     ProductReview[]
}

model Price {
  id         String      @id @default(cuid())
  amount     Int
  info       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  product    Product     @relation(fields: [productId], references: [id])
  productId  String
  orderItems OrderItem[]
  cartItem   CartItem[]
}

model ProductReview {
  id        String   @id @default(cuid())
  score     Int
  text      String
  title     String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
